{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Tempo GUI","text":""},{"location":"development_guide/","title":"\ud83d\udee0 Development Guide","text":"<p>This guide outlines how to set up, build, and manage the project using <code>just</code>, <code>uv</code>, and Git. This project uses PowerShell for cross-platform support.</p>"},{"location":"development_guide/#requirements","title":"\ud83d\udce6 Requirements","text":"<p>Ensure the following tools are installed:</p> <ul> <li>Python</li> <li>Uv</li> <li>Just</li> <li>Git</li> </ul>"},{"location":"development_guide/#getting-started","title":"\ud83d\ude80 Getting Started","text":"<pre><code>git clone https://github.com/Tempo-Organization/tempo-gui\ncd tempo-gui\njust setup\n</code></pre>"},{"location":"development_guide/#available-commands","title":"\u2699\ufe0f Available Commands","text":""},{"location":"development_guide/#setup-and-build","title":"\ud83d\udd27 Setup and Build","text":"<ul> <li> <p><code>just setup</code>   Setup virtual environment and install pre-commit hooks.</p> </li> <li> <p><code>just build</code>   Build the project for Windows using Flet.</p> </li> <li> <p><code>just run</code>   Run the app in Python form (development mode).</p> </li> <li> <p><code>just run_exe</code>   Run the Windows executable app.</p> </li> <li> <p><code>just build_run_exe</code>   Build and run the Windows executable.</p> </li> <li> <p><code>just rebuild</code>   Full clean and rebuild.</p> </li> <li> <p><code>just rebuild_run_exe</code>   Full clean, rebuild, and run the Windows executable.</p> </li> <li> <p><code>just cleanup</code> or <code>just clean</code>   Remove virtual environment and clean untracked files.</p> </li> <li> <p><code>just refresh_deps</code>   Refresh and upgrade project dependencies.</p> </li> </ul>"},{"location":"development_guide/#git-commands","title":"\ud83d\udccb Git Commands","text":"<ul> <li> <p><code>just git_pull</code>   Pull latest changes from remote.</p> </li> <li> <p><code>just git_push</code>   Push local changes to remote.</p> </li> <li> <p><code>just switch_to_main_branch</code>   Switch to <code>main</code> branch.</p> </li> <li> <p><code>just switch_to_dev_branch</code>   Switch to <code>dev</code> branch.</p> </li> <li> <p><code>just merge_dev_into_main</code>   Merge <code>dev</code> into <code>main</code> and push.</p> </li> <li> <p><code>just git_add_files</code>   Interactively add files by path.</p> </li> <li> <p><code>just git_add_all</code>   Add all changes to staging.</p> </li> <li> <p><code>just git_reset</code>   Reset Git staging area.</p> </li> </ul>"},{"location":"development_guide/#git-stash-management","title":"\ud83d\udcbe Git Stash Management","text":"<ul> <li> <p><code>just git_create_stash</code>   Interactively create a stash with a path and comment.</p> </li> <li> <p><code>just git_pop_stash</code>   Interactively pop stash(es) by index.</p> </li> </ul>"},{"location":"development_guide/#pre-commit","title":"\ud83e\uddea Pre-commit","text":"<ul> <li> <p><code>just pre_commit_auto_update</code>   Update pre-commit hooks.</p> </li> <li> <p><code>just pre_commit_check_all</code>   Run pre-commit checks on all files.</p> </li> </ul>"},{"location":"development_guide/#commitizen","title":"\ud83d\udcdd Commitizen","text":"<ul> <li> <p><code>just cz_commit</code>   Create a commit using Commitizen.</p> </li> <li> <p><code>just cz_commit_retry</code>   Retry previous Commitizen commit.</p> </li> </ul>"},{"location":"development_guide/#mkdocs","title":"\ud83d\udcd8 MkDocs","text":"<ul> <li> <p><code>just mkdocs_build</code>   Build MkDocs site.</p> </li> <li> <p><code>just mkdocs_serve</code>   Serve MkDocs site locally.</p> </li> </ul>"}]}